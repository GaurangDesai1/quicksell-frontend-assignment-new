{"ast":null,"code":"var _jsxFileName = \"/Users/gaurangdesai/Desktop/Gaurang-Desai-quicksell-frontend-assignment/src/components/KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport ColumnHeader from './ColumnHeader'; // Import the new component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  displayOption,\n  data,\n  groupingOption,\n  sortingOption\n}) => {\n  _s();\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    if (!data.tickets || !data.users) return;\n    let processedColumns = [];\n    if (displayOption === 'display') {\n      if (groupingOption === 'user') {\n        // Group by user\n        const uniqueUsers = Array.from(new Set(data.tickets.map(ticket => ticket.userId)));\n        processedColumns = uniqueUsers.map(userId => {\n          var _data$users$find;\n          return {\n            header: (_data$users$find = data.users.find(user => user.id === userId)) === null || _data$users$find === void 0 ? void 0 : _data$users$find.name,\n            tickets: data.tickets.filter(ticket => ticket.userId === userId)\n          };\n        });\n      } else if (groupingOption === 'priority') {\n        // Group by priority\n        const groupedTickets = Array.from({\n          length: 5\n        }, (_, index) => data.tickets.filter(ticket => ticket.priority === index));\n        const priorityNames = ['No priority', 'Urgent', 'High', 'Medium', 'Low'];\n        processedColumns = groupedTickets.map((tickets, index) => ({\n          header: `${priorityNames[index]}`,\n          tickets: tickets\n        }));\n      } else if (groupingOption === 'status') {\n        // Group by status\n        const uniqueStatuses = Array.from(new Set(data.tickets.map(ticket => ticket.status)));\n        processedColumns = uniqueStatuses.map(status => ({\n          header: `${status}`,\n          tickets: data.tickets.filter(ticket => ticket.status === status)\n        }));\n      }\n    }\n\n    // Sort the tickets within each column based on sorting option\n    if (sortingOption === 'priority') {\n      processedColumns.forEach(column => {\n        column.tickets.sort((a, b) => b.priority - a.priority);\n      });\n    } else if (sortingOption === 'title') {\n      processedColumns.forEach(column => {\n        column.tickets.sort((a, b) => a.title.localeCompare(b.title));\n      });\n    }\n    while (processedColumns.length < 5) {\n      processedColumns.push({\n        header: '',\n        tickets: []\n      });\n    }\n    setColumns(processedColumns);\n  }, [displayOption, data, groupingOption, sortingOption]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(ColumnHeader, {\n        header: column.header,\n        ticketCount: column.tickets.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), column.tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          ticket: ticket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, ticket.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))]\n    }, columnIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"FGb4ECZkue8/xp6oBDaPDOM3qWY=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","Card","ColumnHeader","jsxDEV","_jsxDEV","KanbanBoard","displayOption","data","groupingOption","sortingOption","_s","columns","setColumns","tickets","users","processedColumns","uniqueUsers","Array","from","Set","map","ticket","userId","_data$users$find","header","find","user","id","name","filter","groupedTickets","length","_","index","priority","priorityNames","uniqueStatuses","status","forEach","column","sort","a","b","title","localeCompare","push","className","children","columnIndex","ticketCount","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gaurangdesai/Desktop/Gaurang-Desai-quicksell-frontend-assignment/src/components/KanbanBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport ColumnHeader from './ColumnHeader'; // Import the new component\n\nconst KanbanBoard = ({ displayOption, data, groupingOption, sortingOption }) => {\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    if (!data.tickets || !data.users) return;\n\n    let processedColumns = [];\n\n    if (displayOption === 'display') {\n      if (groupingOption === 'user') {\n        // Group by user\n        const uniqueUsers = Array.from(new Set(data.tickets.map((ticket) => ticket.userId)));\n        processedColumns = uniqueUsers.map((userId) => ({\n          header: data.users.find((user) => user.id === userId)?.name,\n          tickets: data.tickets.filter((ticket) => ticket.userId === userId),\n        }));\n      } else if (groupingOption === 'priority') {\n        // Group by priority\n        const groupedTickets = Array.from({ length: 5 }, (_, index) =>\n          data.tickets.filter((ticket) => ticket.priority === index)\n        );\n        const priorityNames = ['No priority', 'Urgent', 'High', 'Medium', 'Low'];\n        processedColumns = groupedTickets.map((tickets, index) => ({\n          header: `${priorityNames[index]}`,\n          tickets: tickets,\n        }));\n      } else if (groupingOption === 'status') {\n        // Group by status\n        const uniqueStatuses = Array.from(new Set(data.tickets.map((ticket) => ticket.status)));\n        processedColumns = uniqueStatuses.map((status) => ({\n          header: `${status}`,\n          tickets: data.tickets.filter((ticket) => ticket.status === status),\n        }));\n      }\n    }\n\n    // Sort the tickets within each column based on sorting option\n    if (sortingOption === 'priority') {\n      processedColumns.forEach((column) => {\n        column.tickets.sort((a, b) => b.priority - a.priority);\n      });\n    } else if (sortingOption === 'title') {\n      processedColumns.forEach((column) => {\n        column.tickets.sort((a, b) => a.title.localeCompare(b.title));\n      });\n    }\n\n    while (processedColumns.length < 5) {\n      processedColumns.push({ header: '', tickets: [] });\n    }\n\n    setColumns(processedColumns);\n  }, [displayOption, data, groupingOption, sortingOption]);\n\n\n  return (\n    <div className=\"kanban-board\">\n      {columns.map((column, columnIndex) => (\n        <div key={columnIndex} className=\"column\">\n          <ColumnHeader header={column.header} ticketCount={column.tickets.length} />\n          {column.tickets.map((ticket) => (\n            <div key={ticket.id}>\n              <Card ticket={ticket} />\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default KanbanBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}