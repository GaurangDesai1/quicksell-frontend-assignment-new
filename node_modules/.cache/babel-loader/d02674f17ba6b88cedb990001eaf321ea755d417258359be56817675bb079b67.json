{"ast":null,"code":"var _jsxFileName = \"/Users/gaurangdesai/Desktop/Gaurang-Desai-quicksell-frontend-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport KanbanBoard from './components/KanbanBoard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    tickets: [],\n    users: []\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('api/data.js'); // Use an API route\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const [displayOption, setDisplayOption] = useState('');\n  const [groupingOption, setGroupingOption] = useState('');\n  const [sortingOption, setSortingOption] = useState('');\n  useEffect(() => {\n    const savedDisplayOption = localStorage.getItem('displayOption');\n    const savedGroupingOption = localStorage.getItem('groupingOption');\n    const savedSortingOption = localStorage.getItem('sortingOption');\n    if (savedDisplayOption) {\n      setDisplayOption(savedDisplayOption);\n    }\n    if (savedGroupingOption) {\n      setGroupingOption(savedGroupingOption);\n    }\n    if (savedSortingOption) {\n      setSortingOption(savedSortingOption);\n    }\n  }, []);\n  useEffect(() => {\n    if (displayOption) {\n      localStorage.setItem('displayOption', displayOption);\n    }\n    if (groupingOption) {\n      localStorage.setItem('groupingOption', groupingOption);\n    }\n    if (sortingOption) {\n      localStorage.setItem('sortingOption', sortingOption);\n    }\n  }, [displayOption, groupingOption, sortingOption]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      onGroupingChange: setGroupingOption,\n      onSortingChange: setSortingOption,\n      selectedGroupingOption: groupingOption,\n      selectedSortingOption: sortingOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {\n      displayOption: displayOption,\n      data: data,\n      groupingOption: groupingOption,\n      sortingOption: sortingOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qScSeVZBI3ee9NVyD51yuisrDyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TopBar","KanbanBoard","axios","jsxDEV","_jsxDEV","App","_s","data","setData","tickets","users","fetchData","response","get","error","console","displayOption","setDisplayOption","groupingOption","setGroupingOption","sortingOption","setSortingOption","savedDisplayOption","localStorage","getItem","savedGroupingOption","savedSortingOption","setItem","className","children","onGroupingChange","onSortingChange","selectedGroupingOption","selectedSortingOption","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gaurangdesai/Desktop/Gaurang-Desai-quicksell-frontend-assignment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport KanbanBoard from './components/KanbanBoard';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState({ tickets: [], users: [] });\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('api/data.js'); // Use an API route\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const [displayOption, setDisplayOption] = useState('');\n  const [groupingOption, setGroupingOption] = useState('');\n  const [sortingOption, setSortingOption] = useState('');\n\n  useEffect(() => {\n    const savedDisplayOption = localStorage.getItem('displayOption');\n    const savedGroupingOption = localStorage.getItem('groupingOption');\n    const savedSortingOption = localStorage.getItem('sortingOption');\n\n    if (savedDisplayOption) {\n      setDisplayOption(savedDisplayOption);\n    }\n\n    if (savedGroupingOption) {\n      setGroupingOption(savedGroupingOption);\n    }\n\n    if (savedSortingOption) {\n      setSortingOption(savedSortingOption);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (displayOption) {\n      localStorage.setItem('displayOption', displayOption);\n    }\n\n    if (groupingOption) {\n      localStorage.setItem('groupingOption', groupingOption);\n    }\n\n    if (sortingOption) {\n      localStorage.setItem('sortingOption', sortingOption);\n    }\n  }, [displayOption, groupingOption, sortingOption]);\n\n  return (\n    <div className=\"app\">\n      <TopBar\n        onGroupingChange={setGroupingOption}\n        onSortingChange={setSortingOption}\n        selectedGroupingOption={groupingOption}\n        selectedSortingOption={sortingOption}\n      />\n      <KanbanBoard\n        displayOption={displayOption}\n        data={data}\n        groupingOption={groupingOption}\n        sortingOption={sortingOption}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}