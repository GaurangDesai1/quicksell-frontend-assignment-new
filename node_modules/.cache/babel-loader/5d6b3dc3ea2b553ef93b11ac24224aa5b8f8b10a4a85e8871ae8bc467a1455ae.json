{"ast":null,"code":"import _slicedToArray from\"/Users/gaurangdesai/Desktop/Gaurang-Desai-quicksell-frontend-assignment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Card from'./Card';import ColumnHeader from'./ColumnHeader';// Import the new component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var KanbanBoard=function KanbanBoard(_ref){var displayOption=_ref.displayOption,data=_ref.data,groupingOption=_ref.groupingOption,sortingOption=_ref.sortingOption;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1];useEffect(function(){if(!data.tickets||!data.users)return;var processedColumns=[];if(displayOption==='display'){if(groupingOption==='user'){// Group by user\nvar uniqueUsers=Array.from(new Set(data.tickets.map(function(ticket){return ticket.userId;})));processedColumns=uniqueUsers.map(function(userId){var _data$users$find;return{header:(_data$users$find=data.users.find(function(user){return user.id===userId;}))===null||_data$users$find===void 0?void 0:_data$users$find.name,tickets:data.tickets.filter(function(ticket){return ticket.userId===userId;})};});}else if(groupingOption==='priority'){// Group by priority\nvar groupedTickets=Array.from({length:5},function(_,index){return data.tickets.filter(function(ticket){return ticket.priority===index;});});var priorityNames=['No priority','Urgent','High','Medium','Low'];processedColumns=groupedTickets.map(function(tickets,index){return{header:\"\".concat(priorityNames[index]),tickets:tickets};});}else if(groupingOption==='status'){// Group by status\nvar uniqueStatuses=Array.from(new Set(data.tickets.map(function(ticket){return ticket.status;})));processedColumns=uniqueStatuses.map(function(status){return{header:\"\".concat(status),tickets:data.tickets.filter(function(ticket){return ticket.status===status;})};});}}// Sort the tickets within each column based on sorting option\nif(sortingOption==='priority'){processedColumns.forEach(function(column){column.tickets.sort(function(a,b){return b.priority-a.priority;});});}else if(sortingOption==='title'){processedColumns.forEach(function(column){column.tickets.sort(function(a,b){return a.title.localeCompare(b.title);});});}while(processedColumns.length<5){processedColumns.push({header:'',tickets:[]});}setColumns(processedColumns);},[displayOption,data,groupingOption,sortingOption]);return/*#__PURE__*/_jsx(\"div\",{className:\"kanban-board\",children:columns.map(function(column,columnIndex){return/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(ColumnHeader,{header:column.header,ticketCount:column.tickets.length}),column.tickets.map(function(ticket){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{ticket:ticket})},ticket.id);})]},columnIndex);})});};export default KanbanBoard;","map":{"version":3,"names":["React","useState","useEffect","Card","ColumnHeader","jsx","_jsx","jsxs","_jsxs","KanbanBoard","_ref","displayOption","data","groupingOption","sortingOption","_useState","_useState2","_slicedToArray","columns","setColumns","tickets","users","processedColumns","uniqueUsers","Array","from","Set","map","ticket","userId","_data$users$find","header","find","user","id","name","filter","groupedTickets","length","_","index","priority","priorityNames","concat","uniqueStatuses","status","forEach","column","sort","a","b","title","localeCompare","push","className","children","columnIndex","ticketCount"],"sources":["/Users/gaurangdesai/Desktop/Gaurang-Desai-quicksell-frontend-assignment/src/components/KanbanBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport ColumnHeader from './ColumnHeader'; // Import the new component\n\nconst KanbanBoard = ({ displayOption, data, groupingOption, sortingOption }) => {\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    if (!data.tickets || !data.users) return;\n\n    let processedColumns = [];\n\n    if (displayOption === 'display') {\n      if (groupingOption === 'user') {\n        // Group by user\n        const uniqueUsers = Array.from(new Set(data.tickets.map((ticket) => ticket.userId)));\n        processedColumns = uniqueUsers.map((userId) => ({\n          header: data.users.find((user) => user.id === userId)?.name,\n          tickets: data.tickets.filter((ticket) => ticket.userId === userId),\n        }));\n      } else if (groupingOption === 'priority') {\n        // Group by priority\n        const groupedTickets = Array.from({ length: 5 }, (_, index) =>\n          data.tickets.filter((ticket) => ticket.priority === index)\n        );\n        const priorityNames = ['No priority', 'Urgent', 'High', 'Medium', 'Low'];\n        processedColumns = groupedTickets.map((tickets, index) => ({\n          header: `${priorityNames[index]}`,\n          tickets: tickets,\n        }));\n      } else if (groupingOption === 'status') {\n        // Group by status\n        const uniqueStatuses = Array.from(new Set(data.tickets.map((ticket) => ticket.status)));\n        processedColumns = uniqueStatuses.map((status) => ({\n          header: `${status}`,\n          tickets: data.tickets.filter((ticket) => ticket.status === status),\n        }));\n      }\n    }\n\n    // Sort the tickets within each column based on sorting option\n    if (sortingOption === 'priority') {\n      processedColumns.forEach((column) => {\n        column.tickets.sort((a, b) => b.priority - a.priority);\n      });\n    } else if (sortingOption === 'title') {\n      processedColumns.forEach((column) => {\n        column.tickets.sort((a, b) => a.title.localeCompare(b.title));\n      });\n    }\n\n    while (processedColumns.length < 5) {\n      processedColumns.push({ header: '', tickets: [] });\n    }\n\n    setColumns(processedColumns);\n  }, [displayOption, data, groupingOption, sortingOption]);\n\n\n  return (\n    <div className=\"kanban-board\">\n      {columns.map((column, columnIndex) => (\n        <div key={columnIndex} className=\"column\">\n          <ColumnHeader header={column.header} ticketCount={column.tickets.length} />\n          {column.tickets.map((ticket) => (\n            <div key={ticket.id}>\n              <Card ticket={ticket} />\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default KanbanBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}